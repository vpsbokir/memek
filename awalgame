task.wait(1)

local gameid = game.PlaceId
if(gameid == 15846919378) then
    -- List of items to sell with their corresponding quantities
    local itemsToSell = {
        {name = "Pizza", quantity = 10000},
        {name = "Soul", quantity = 10000},
        {name = "OldTV", quantity = 10000},
        {name = "Flashlight", quantity = 10000},
        {name = "EternalGlass", quantity = 10000},
        {name = "GoldenLock", quantity = 10000},
        {name = "Agony", quantity = 1110}, -- Tengkorak 30 souls
        {name = "UncommonRemnant", quantity = 10000}, -- Bola Bola Shiny Hijau
        {name = "RareRemnant", quantity = 10000}, -- Bola Bola Shiny biru
        {name = "EpicRemnant", quantity = 10000}, -- Bola Bola Shiny ungu
        {name = "MythicRemnant", quantity = 100}, -- Bola Bola Shiny kuning
        {name = "SecretRemnant", quantity = 100} -- Bola Bola Shiny Red
    }

    -- Function to auto-sell items
    local function autoSell(items)
        for _, item in pairs(items) do
            local args = {
                [1] = item.name,
                [2] = item.quantity
            }
            game:GetService("ReplicatedStorage").Remotes.Misc.Salvage:FireServer(unpack(args))
            wait(1) -- Adding a small delay to avoid flooding the server
        end
    end

    -- Execute the auto-sell function
    autoSell(itemsToSell)

    -- Auto Join Game
local teleportService = game:GetService("TeleportService") -- Declaration for the service
local player = game.Players.LocalPlayer -- Corrected to use game.Players
local placeID = 15860930970 -- The ID of the place you're teleporting to

-- Ensure the player's character is loaded
if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
    -- Teleport the player to the specified place ID
    teleportService:Teleport(placeID, player)
else
    -- Wait until the character and HumanoidRootPart are loaded
    player.CharacterAdded:Wait()
    teleportService:Teleport(placeID, player)
end

else
    print("place invalid")
end
